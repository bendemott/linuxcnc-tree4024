# Generated by PNCconf at Fri Feb  1 14:36:33 2019
# If you make changes to this file, they will be
# overwritten when you run PNCconf again

loadrt trivkins
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES
loadrt hostmot2
loadrt hm2_pci config="num_encoders=6 num_pwmgens=6 num_stepgens=0 sserial_port_0=000xxx"
setp    hm2_5i25.0.watchdog.timeout_ns 5000000
loadrt pid names=pid.x,pid.y,pid.z,pid.s
loadrt toggle count=1
loadrt toggle2nist count=1
loadrt abs names=abs.spindle
loadrt lowpass names=lowpass.spindle
loadrt scale names=scale.spindle
loadrt estop_latch

# load our python user component
loadusr -Wn mega2560 ./mega2560_hal_io_pins.py

addf hm2_5i25.0.read          servo-thread
addf motion-command-handler   servo-thread
addf estop-latch.0            servo-thread
addf motion-controller        servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread
addf scale.spindle	          servo-thread
addf abs.spindle              servo-thread
addf lowpass.spindle          servo-thread
addf hm2_5i25.0.write         servo-thread

# show components loaded on startup
list comp
# show all HAL PINS on startup
show pin

# ======= EXTERNAL INPUT SIGNALS===============================================
# this section sets up all the signals for inputs to be used later.
# these commands by themselves do nothing, other than give inputs more
# friendly names.
# Note that: INPUTS are signals INTO the PC controller.
# -----------------------------------------------------------------------------
net input-front-panel-on <= mega2560.input-00
net input-fault-pump-overload <= mega2560.input-01
net input-door-disconnect <= mega2560.input-02
net input-servo-power <= mega2560.input-03
net input-front-door-closed <= mega2560.input-04
net input-front-door-open <= mega2560.input-05

net input-spindle-stopped <= mega2560.input-06
net input-spindle-speed-attained <= mega2560.input-07
net input-spindle-torque-detected <= mega2560.input-08
net input-fault-spindle <= mega2560.input-09

net input-fault-feed <= mega2560.input-10
net input-fault-servo-overloaded <= mega2560.input-11

net input-airpressure-ok <= mega2560.input-12
#net input-spindle-tool-release-btn <= mega2560.input-13 TODO fix me - replace with a component because you cant connect two signals together
net input-spindle-toolholder-present <= mega2560.input-14 # SQ 0910
net input-spindle-tool-unclamped <= mega2560.input-15 # SQ 0907
net input-spindle-tool-clamped <= mega2560.input-16 # SQ 0904
net input-carousel-pocket-aligned <= mega2560.input-17

# LIMIT + HOME are wired in the same circuit for each axis.
net input-x-axis-limit <= mega2560.input-18
net input-y-axis-limit <= mega2560.input-19
net input-z-axis-limit <= mega2560.input-20

net input-carousel-in-first-pos <= mega2560.input-21
net input-carousel-position-changing <= mega2560.input-22
net input-carousel-stowed <= mega2560.input-23
net input-carousel-by-headstock <= mega2560.input-24
net input-carousel-tool-present <= mega2560.input-25
net input-fault-carousel-motor-ok <= mega2560.input-26
net input-fault-carousel-motor-overload <= mega2560.input-26-not
net input-unknown-1 <= mega2560.input-27
net input-estop-front-panel-on <= mega2560.input-28-not
net input-estop-front-panel-off <= mega2560.input-28
net input-unknown2 <= mega2560.input-29
net input-unknown3 <= mega2560.input-30


# ----------------- END OF INPUTS --------------------------------------------


# ======= EXTERNAL OUTPUTS ====================================================
# this section sets up all the signals for outputs to be used later.
# these commands by themselves do nothing, other than give outputs more
# friendly names.
# Note that: OUTPUTS are signals from the PC controller to the CNC MACHINE
# -----------------------------------------------------------------------------
net output-estop-condition => mega2560.output-00
net output-spindle-unclamp => mega2560.output-01
net output-spindle-airblast => mega2560.output-02
net output-spindle-on => mega2560.output-03
net output-spindle-alarm-reset => mega2560.output-04
net output-spindle-speed-control => mega2560.output-05
net output-servos-enable => mega2560.output-06
net output-coolant-internal => mega2560.output-07
net output-carousel-cw => mega2560.output-08
net output-carousel-ccw => mega2560.output-09
net output-carousel-left-stow => mega2560.output-10
net output-carousel-right-extend => mega2560.output-11
net output-alarm-reset => mega2560.output-12
net output-unknown1 => mega2560.output-13
net output-unknown2 => mega2560.output-14
# ----------------- END OF OUTPUTS --------------------------------------------

# ============ ESTOP CONFIGURATION =============================================
# TODO: relay needs to FORCE reset magnetic ON button when ESTOP condition is triggered (changed)
# The estop latch component is designed to stay in-sync with the interface better than directly
# connecting pins.
# iocontrol.0.emc-enable-in (Bit, In) Should be driven FALSE when an external estop condition exists.
net estop-loopout iocontrol.0.emc-enable-in <= estop-latch.0.ok-out
net estop-loopin iocontrol.0.user-enable-out => estop-latch.0.ok-in
net estop-reset iocontrol.0.user-request-enable => estop-latch.0.reset
net input-estop-front-panel-on => estop-latch.0.fault-in
# when the physical estop is on, make the ui estop on
net input-estop-front-panel-on => halui.estop.activate
# when the phsyical estop is off, make the ui estop off
net input-estop-front-panel-off => halui.estop.reset  

# halui.estop.is-activated (out)
# halui.estop.activate

# Connect estop fault-out to our ESTOP condition signal
# TODO this should trigger a relay to interrupt ON
net output-estop-condition <= estop-latch.0.fault-out

# This is a minimal estop loop for debugging
#net estop-loop  iocontrol.0.user-enable-out => iocontrol.0.emc-enable-in

# Enabling Motion / Machine ON
# see: custom_postgui.hal

# Create a signal for "motion.motion-enabled" to be used elsehwere
net motion-is-enabled motion.motion-enabled

# HOME AND LIMIT SWITCHES
# ==========================================

# X AXIS
net input-x-axis-limit => axis.0.neg-lim-sw-in
net input-x-axis-limit => axis.0.pos-lim-sw-in
net input-x-axis-limit => axis.0.home-sw-in

# Y AXIS
net input-y-axis-limit => axis.1.neg-lim-sw-in
net input-y-axis-limit => axis.1.pos-lim-sw-in
net input-y-axis-limit => axis.1.home-sw-in

# Z AXIS
net input-z-axis-limit => axis.2.neg-lim-sw-in
net input-z-axis-limit => axis.2.pos-lim-sw-in
net input-z-axis-limit => axis.2.home-sw-in


# =========================================
# AXIS SETUP
# =========================================
# =========================================

#*******************
#  AXIS X
#*******************

setp   pid.x.Pgain     [AXIS_0]P
setp   pid.x.Igain     [AXIS_0]I
setp   pid.x.Dgain     [AXIS_0]D
setp   pid.x.bias      [AXIS_0]BIAS
setp   pid.x.FF0       [AXIS_0]FF0
setp   pid.x.FF1       [AXIS_0]FF1
setp   pid.x.FF2       [AXIS_0]FF2
setp   pid.x.deadband  [AXIS_0]DEADBAND
setp   pid.x.maxoutput [AXIS_0]MAX_OUTPUT
setp   pid.x.error-previous-target true

net x-index-enable  <=> pid.x.index-enable
net x-enable        =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net x-vel-cmd       =>  pid.x.command-deriv
net x-pos-fb        =>  pid.x.feedback
net x-output        =>  pid.x.output

# ---PWM Generator signals/setup---
setp   hm2_5i25.0.7i77.0.1.analogout0-scalemax  [AXIS_0]OUTPUT_SCALE
setp   hm2_5i25.0.7i77.0.1.analogout0-minlim    [AXIS_0]OUTPUT_MIN_LIMIT
setp   hm2_5i25.0.7i77.0.1.analogout0-maxlim    [AXIS_0]OUTPUT_MAX_LIMIT

net x-output  => hm2_5i25.0.7i77.0.1.analogout0
net x-pos-cmd    axis.0.motor-pos-cmd
net x-enable     axis.0.amp-enable-out
# enable _all_ sserial pwmgens when X is enabled
net x-enable   hm2_5i25.0.7i77.0.1.analogena

# ---Encoder feedback signals/setup---

setp    hm2_5i25.0.encoder.00.counter-mode 0
setp    hm2_5i25.0.encoder.00.filter 1
setp    hm2_5i25.0.encoder.00.index-invert 0
setp    hm2_5i25.0.encoder.00.index-mask 0
setp    hm2_5i25.0.encoder.00.index-mask-invert 0
setp    hm2_5i25.0.encoder.00.scale  [AXIS_0]ENCODER_SCALE

net x-pos-fb               <=  hm2_5i25.0.encoder.00.position
net x-vel-fb               <=  hm2_5i25.0.encoder.00.velocity
net x-pos-fb               =>  axis.0.motor-pos-fb
net x-index-enable    axis.0.index-enable  <=>  hm2_5i25.0.encoder.00.index-enable
net x-pos-rawcounts        <=  hm2_5i25.0.encoder.00.rawcounts



#*******************
#  AXIS Y
#*******************

setp   pid.y.Pgain     [AXIS_1]P
setp   pid.y.Igain     [AXIS_1]I
setp   pid.y.Dgain     [AXIS_1]D
setp   pid.y.bias      [AXIS_1]BIAS
setp   pid.y.FF0       [AXIS_1]FF0
setp   pid.y.FF1       [AXIS_1]FF1
setp   pid.y.FF2       [AXIS_1]FF2
setp   pid.y.deadband  [AXIS_1]DEADBAND
setp   pid.y.maxoutput [AXIS_1]MAX_OUTPUT
setp   pid.y.error-previous-target true

net y-index-enable  <=> pid.y.index-enable
net y-enable        =>  pid.y.enable
net y-pos-cmd       =>  pid.y.command
net y-vel-cmd       =>  pid.y.command-deriv
net y-pos-fb        =>  pid.y.feedback
net y-output        =>  pid.y.output

# ---PWM Generator signals/setup---

setp   hm2_5i25.0.7i77.0.1.analogout1-scalemax  [AXIS_1]OUTPUT_SCALE
setp   hm2_5i25.0.7i77.0.1.analogout1-minlim    [AXIS_1]OUTPUT_MIN_LIMIT
setp   hm2_5i25.0.7i77.0.1.analogout1-maxlim    [AXIS_1]OUTPUT_MAX_LIMIT

net y-output                             => hm2_5i25.0.7i77.0.1.analogout1
net y-pos-cmd    axis.1.motor-pos-cmd
net y-enable     axis.1.amp-enable-out

# ---Encoder feedback signals/setup---

setp    hm2_5i25.0.encoder.01.counter-mode 0
setp    hm2_5i25.0.encoder.01.filter 1
setp    hm2_5i25.0.encoder.01.index-invert 0
setp    hm2_5i25.0.encoder.01.index-mask 0
setp    hm2_5i25.0.encoder.01.index-mask-invert 0
setp    hm2_5i25.0.encoder.01.scale  [AXIS_1]ENCODER_SCALE

net y-pos-fb               <=  hm2_5i25.0.encoder.01.position
net y-vel-fb               <=  hm2_5i25.0.encoder.01.velocity
net y-pos-fb               =>  axis.1.motor-pos-fb
net y-index-enable    axis.1.index-enable  <=>  hm2_5i25.0.encoder.01.index-enable
net y-pos-rawcounts        <=  hm2_5i25.0.encoder.01.rawcounts


#*******************
#  AXIS Z
#*******************

setp   pid.z.Pgain     [AXIS_2]P
setp   pid.z.Igain     [AXIS_2]I
setp   pid.z.Dgain     [AXIS_2]D
setp   pid.z.bias      [AXIS_2]BIAS
setp   pid.z.FF0       [AXIS_2]FF0
setp   pid.z.FF1       [AXIS_2]FF1
setp   pid.z.FF2       [AXIS_2]FF2
setp   pid.z.deadband  [AXIS_2]DEADBAND
setp   pid.z.maxoutput [AXIS_2]MAX_OUTPUT
setp   pid.z.error-previous-target true

net z-index-enable  <=> pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-vel-cmd       =>  pid.z.command-deriv
net z-pos-fb        =>  pid.z.feedback
net z-output        =>  pid.z.output

# ---PWM Generator signals/setup---

setp   hm2_5i25.0.7i77.0.1.analogout2-scalemax  [AXIS_2]OUTPUT_SCALE
setp   hm2_5i25.0.7i77.0.1.analogout2-minlim    [AXIS_2]OUTPUT_MIN_LIMIT
setp   hm2_5i25.0.7i77.0.1.analogout2-maxlim    [AXIS_2]OUTPUT_MAX_LIMIT

net z-output  => hm2_5i25.0.7i77.0.1.analogout2
net z-pos-cmd    axis.2.motor-pos-cmd
net z-enable     axis.2.amp-enable-out

# ---Encoder feedback signals/setup---

setp    hm2_5i25.0.encoder.02.counter-mode 0
setp    hm2_5i25.0.encoder.02.filter 1
setp    hm2_5i25.0.encoder.02.index-invert 0
setp    hm2_5i25.0.encoder.02.index-mask 0
setp    hm2_5i25.0.encoder.02.index-mask-invert 0
setp    hm2_5i25.0.encoder.02.scale  [AXIS_2]ENCODER_SCALE

net z-pos-fb               <=  hm2_5i25.0.encoder.02.position
net z-vel-fb               <=  hm2_5i25.0.encoder.02.velocity
net z-pos-fb               =>  axis.2.motor-pos-fb
net z-index-enable    axis.2.index-enable  <=>  hm2_5i25.0.encoder.02.index-enable
net z-pos-rawcounts        <=  hm2_5i25.0.encoder.02.rawcounts


#*******************
#  SPINDLE
#*******************
# Spindle Enable (new signal, out-pin, in-pin)
# When linuxcnc calls for spindle velocity via motion.spindle-on - we active output-spindle-on (output-3)
net output-spindle-on <= motion.spindle-on

# Spindle at speed
net input-spindle-speed-attained => motion.spindle-at-speed

setp   pid.s.Pgain     [SPINDLE_9]P
setp   pid.s.Igain     [SPINDLE_9]I
setp   pid.s.Dgain     [SPINDLE_9]D
setp   pid.s.bias      [SPINDLE_9]BIAS
setp   pid.s.FF0       [SPINDLE_9]FF0
setp   pid.s.FF1       [SPINDLE_9]FF1
setp   pid.s.FF2       [SPINDLE_9]FF2
setp   pid.s.deadband  [SPINDLE_9]DEADBAND
setp   pid.s.maxoutput [SPINDLE_9]MAX_OUTPUT
setp   pid.s.error-previous-target true

net spindle-index-enable  <=> pid.s.index-enable
net output-spindle-on     =>  pid.s.enable
net spindle-vel-cmd-rpm   =>  pid.s.command
net spindle-vel-fb-rpm    =>  pid.s.feedback
net spindle-output        =>  pid.s.output

# ---PWM Generator signals/setup---

setp   hm2_5i25.0.7i77.0.1.analogout3-scalemax  [SPINDLE_9]OUTPUT_SCALE
setp   hm2_5i25.0.7i77.0.1.analogout3-minlim    [SPINDLE_9]OUTPUT_MIN_LIMIT
setp   hm2_5i25.0.7i77.0.1.analogout3-maxlim    [SPINDLE_9]OUTPUT_MAX_LIMIT

# this controls spindle rpm
net spindle-output => hm2_5i25.0.7i77.0.1.analogout3

# ---Encoder feedback signals/setup---

setp    hm2_5i25.0.encoder.03.counter-mode 0
setp    hm2_5i25.0.encoder.03.filter 1
setp    hm2_5i25.0.encoder.03.index-invert 0
setp    hm2_5i25.0.encoder.03.index-mask 0
setp    hm2_5i25.0.encoder.03.index-mask-invert 0
setp    hm2_5i25.0.encoder.03.scale  [SPINDLE_9]ENCODER_SCALE

net spindle-revs             <=  hm2_5i25.0.encoder.03.position
net spindle-vel-fb-rps       <=  hm2_5i25.0.encoder.03.velocity
net spindle-index-enable    <=>  hm2_5i25.0.encoder.03.index-enable
net spindle-pos-rawcounts    <=  hm2_5i25.0.encoder.03.rawcounts

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  motion.spindle-speed-out-rps
net spindle-vel-cmd-rps-abs    <=  motion.spindle-speed-out-rps-abs
net spindle-vel-cmd-rpm        <=  motion.spindle-speed-out
net spindle-vel-cmd-rpm-abs    <=  motion.spindle-speed-out-abs
net spindle-cw                 <=  motion.spindle-forward
net spindle-ccw                <=  motion.spindle-reverse
net spindle-brake              <=  motion.spindle-brake
net spindle-revs               =>  motion.spindle-revs
net spindle-vel-fb-rps         =>  motion.spindle-speed-in
net spindle-index-enable      <=>  motion.spindle-index-enable


# ---Spindle synchronized motion

#  Use ACTUAL spindle velocity from spindle encoder
#  spindle-velocity bounces around so we filter it with lowpass
#  spindle-velocity is signed so we use absolute component to remove sign
#  ACTUAL velocity is in RPS not RPM so we scale it.

setp     scale.spindle.gain 60
setp     lowpass.spindle.gain 0.0063
net spindle-vel-fb-rps    =>     scale.spindle.in
net spindle-fb-rpm               scale.spindle.out       =>   abs.spindle.in
net spindle-fb-rpm-abs           abs.spindle.out         =>   lowpass.spindle.in
net spindle-fb-rpm-abs-filtered  lowpass.spindle.out


#  ---HALUI signals---

net joint-select-a        halui.joint.0.select
net x-is-homed            halui.joint.0.is-homed
net jog-x-pos             halui.jog.0.plus
net jog-x-neg             halui.jog.0.minus
net jog-x-analog          halui.jog.0.analog
net joint-select-b        halui.joint.1.select
net y-is-homed            halui.joint.1.is-homed
net jog-y-pos             halui.jog.1.plus
net jog-y-neg             halui.jog.1.minus
net jog-y-analog          halui.jog.1.analog
net joint-select-c        halui.joint.2.select
net z-is-homed            halui.joint.2.is-homed
net jog-z-pos             halui.jog.2.plus
net jog-z-neg             halui.jog.2.minus
net jog-z-analog          halui.jog.2.analog
net jog-selected-pos      halui.jog.selected.plus
net jog-selected-neg      halui.jog.selected.minus
net spindle-manual-cw     halui.spindle.forward
net spindle-manual-ccw    halui.spindle.reverse
net spindle-manual-stop   halui.spindle.stop
net jog-speed             halui.jog-speed
net MDI-mode              halui.mode.is-mdi
